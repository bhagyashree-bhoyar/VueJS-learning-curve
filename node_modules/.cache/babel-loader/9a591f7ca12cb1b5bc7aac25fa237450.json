{"remainingRequest":"/home/bhagyashreebhoyer/small-curd-application-vue/VueJS-learning-curve/small-curd-application/node_modules/babel-loader/lib/index.js!/home/bhagyashreebhoyer/small-curd-application-vue/VueJS-learning-curve/small-curd-application/node_modules/eslint-loader/index.js??ref--13-0!/home/bhagyashreebhoyer/small-curd-application-vue/VueJS-learning-curve/small-curd-application/src/store/store.js","dependencies":[{"path":"/home/bhagyashreebhoyer/small-curd-application-vue/VueJS-learning-curve/small-curd-application/src/store/store.js","mtime":1582183218372},{"path":"/home/bhagyashreebhoyer/small-curd-application-vue/VueJS-learning-curve/small-curd-application/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bhagyashreebhoyer/small-curd-application-vue/VueJS-learning-curve/small-curd-application/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bhagyashreebhoyer/small-curd-application-vue/VueJS-learning-curve/small-curd-application/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvaG9tZS9iaGFneWFzaHJlZWJob3llci9zbWFsbC1jdXJkLWFwcGxpY2F0aW9uLXZ1ZS9WdWVKUy1sZWFybmluZy1jdXJ2ZS9zbWFsbC1jdXJkLWFwcGxpY2F0aW9uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFZ1ZXggZnJvbSAndnVleCc7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCB2YXIgc3RvcmUgPSBuZXcgVnVleC5TdG9yZSh7CiAgc3RhdGU6IHsKICAgIGVudHJ5czogW3sKICAgICAgbmFtZTogJ0JhbmFuYSBTa2luJywKICAgICAgZW1haWw6ICdhYmNAZ21haWwuY29tJwogICAgfSwgewogICAgICBuYW1lOiAnU2hpbnkgU3RhcicsCiAgICAgIGVtYWlsOiAneHl6QGdtYWlsLmNvbScKICAgIH0sIHsKICAgICAgbmFtZTogJ0dyZWVuIFNoZWxscycsCiAgICAgIGVtYWlsOiAnYWFhQEBnbWFpbC5jb20nCiAgICB9LCB7CiAgICAgIG5hbWU6ICdSZWQgU2hlbGxzJywKICAgICAgZW1haWw6ICdiYmJAZ21haWwuY29tJwogICAgfV0KICB9LAogIGdldHRlcnM6IHsKICAgIGdldEVudHJ5czogZnVuY3Rpb24gZ2V0RW50cnlzKHN0YXRlKSB7CiAgICAgIHZhciBnZXRFbnRyeXMgPSBzdGF0ZS5lbnRyeXMubWFwKGZ1bmN0aW9uIChlbnRyeSkgewogICAgICAgIHJldHVybiBlbnRyeTsKICAgICAgfSk7CiAgICAgIHJldHVybiBnZXRFbnRyeXM7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBhZGRFbnRyeTogZnVuY3Rpb24gYWRkRW50cnkoX3JlZiwgZW50cnkpIHsKICAgICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICBjb21taXQoJ2FkZEVudHJ5JywgZW50cnkpOwogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBhZGRFbnRyeTogZnVuY3Rpb24gYWRkRW50cnkoc3RhdGUsIGVudHJ5KSB7CiAgICAgIHN0YXRlLmVudHJ5cyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoc3RhdGUuZW50cnlzKSwgW2VudHJ5XSk7CiAgICB9CiAgfQp9KTs="},{"version":3,"sources":["/home/bhagyashreebhoyer/small-curd-application-vue/VueJS-learning-curve/small-curd-application/src/store/store.js"],"names":["Vue","Vuex","use","store","Store","state","entrys","name","email","getters","getEntrys","map","entry","actions","addEntry","commit","mutations"],"mappings":";;;AACA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEAD,GAAG,CAACE,GAAJ,CAAQD,IAAR;AAEA,OAAO,IAAME,KAAK,GAAG,IAAIF,IAAI,CAACG,KAAT,CAAe;AAChCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE,CACJ;AAACC,MAAAA,IAAI,EAAE,aAAP;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KADI,EAEJ;AAACD,MAAAA,IAAI,EAAE,YAAP;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAFI,EAGJ;AAACD,MAAAA,IAAI,EAAE,cAAP;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KAHI,EAIJ;AAACD,MAAAA,IAAI,EAAE,YAAP;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAJI;AADL,GADyB;AAShCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,SAAS,EAAE,mBAACL,KAAD,EAAW;AAClB,UAAIK,SAAS,GAAGL,KAAK,CAACC,MAAN,CAAaK,GAAb,CAAkB,UAAAC,KAAK,EAAI;AACvC,eAAOA,KAAP;AACH,OAFe,CAAhB;AAGA,aAAOF,SAAP;AACH;AANI,GATuB;AAiBhCG,EAAAA,OAAO,EAAE;AACLC,IAAAA,QADK,0BACgBF,KADhB,EACuB;AAAA,UAAjBG,MAAiB,QAAjBA,MAAiB;AACxBA,MAAAA,MAAM,CAAC,UAAD,EAAaH,KAAb,CAAN;AACH;AAHI,GAjBuB;AAuBhCI,EAAAA,SAAS,EAAE;AACPF,IAAAA,QADO,oBACGT,KADH,EACUO,KADV,EACiB;AACpBP,MAAAA,KAAK,CAACC,MAAN,gCAAmBD,KAAK,CAACC,MAAzB,IAAiCM,KAAjC;AACD;AAHI;AAvBqB,CAAf,CAAd","sourcesContent":[" \nimport Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nexport const store = new Vuex.Store({\n    state: {\n        entrys: [\n            {name: 'Banana Skin', email: 'abc@gmail.com'},\n            {name: 'Shiny Star', email: 'xyz@gmail.com'},\n            {name: 'Green Shells', email: 'aaa@@gmail.com'},\n            {name: 'Red Shells', email: 'bbb@gmail.com'}\n        ]\n    },\n    getters: {\n        getEntrys: (state) => {\n            var getEntrys = state.entrys.map( entry => {\n                return entry;\n            });\n            return getEntrys;\n        }\n    },\n    actions: {\n        addEntry({ commit }, entry) {\n            commit('addEntry', entry)\n        }\n    },\n\n    mutations: {\n        addEntry (state, entry) {\n            state.entrys = [...state.entrys, entry]\n          }\n    }\n});\n"]}]}